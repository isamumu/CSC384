# ======= TIPS ======= # 
1. In computing a heuristic, avoid having loops as much as possible because it will negatively affect the run time. Use simple path costs to start with such as Manhattan Distance for default cost
2. Due to tight time constraints, it is difficult to construct an elaborate heuristic; Look at the Sokoban space and consider simple positions which the robot should avoid in certain scenarios
3. Heuristics can award a path to make it more desirable, but it is more efficient to come up with penalties for certain moves; thus, in addition to manhattan distance add the cost to the closest snowball from the robot
4. When brainstorming penalties, consider deadlocks positions in the map that will stall the game; look into how corners and edges play a role in creating deadlocks
5. To shorten the runtime, put conditional statements on each heuristic such as making deadlock checks exclusive for boards of a certain size